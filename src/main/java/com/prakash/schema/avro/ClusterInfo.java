/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.prakash.schema.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ClusterInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ClusterInfo\",\"namespace\":\"com.prakash.schema.avro\",\"fields\":[{\"name\":\"name\",\"type\":\"string\",\"doc\":\"Name of the cluster\"},{\"name\":\"kafkaUrl\",\"type\":\"string\",\"doc\":\"kafka url\",\"default\":\"localhost:9092\"},{\"name\":\"zkUrl\",\"type\":\"string\",\"doc\":\"zookeeper url\",\"default\":\"localhost:2181\"},{\"name\":\"id\",\"type\":\"int\",\"doc\":\"dummy id\",\"default\":\"1\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Name of the cluster */
  @Deprecated public java.lang.CharSequence name;
  /** kafka url */
  @Deprecated public java.lang.CharSequence kafkaUrl;
  /** zookeeper url */
  @Deprecated public java.lang.CharSequence zkUrl;
  /** dummy id */
  @Deprecated public int id;

  /**
   * Default constructor.
   */
  public ClusterInfo() {}

  /**
   * All-args constructor.
   */
  public ClusterInfo(java.lang.CharSequence name, java.lang.CharSequence kafkaUrl, java.lang.CharSequence zkUrl, java.lang.Integer id) {
    this.name = name;
    this.kafkaUrl = kafkaUrl;
    this.zkUrl = zkUrl;
    this.id = id;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return kafkaUrl;
    case 2: return zkUrl;
    case 3: return id;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: kafkaUrl = (java.lang.CharSequence)value$; break;
    case 2: zkUrl = (java.lang.CharSequence)value$; break;
    case 3: id = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * Name of the cluster   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * Name of the cluster   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'kafkaUrl' field.
   * kafka url   */
  public java.lang.CharSequence getKafkaUrl() {
    return kafkaUrl;
  }

  /**
   * Sets the value of the 'kafkaUrl' field.
   * kafka url   * @param value the value to set.
   */
  public void setKafkaUrl(java.lang.CharSequence value) {
    this.kafkaUrl = value;
  }

  /**
   * Gets the value of the 'zkUrl' field.
   * zookeeper url   */
  public java.lang.CharSequence getZkUrl() {
    return zkUrl;
  }

  /**
   * Sets the value of the 'zkUrl' field.
   * zookeeper url   * @param value the value to set.
   */
  public void setZkUrl(java.lang.CharSequence value) {
    this.zkUrl = value;
  }

  /**
   * Gets the value of the 'id' field.
   * dummy id   */
  public java.lang.Integer getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * dummy id   * @param value the value to set.
   */
  public void setId(java.lang.Integer value) {
    this.id = value;
  }

  /** Creates a new ClusterInfo RecordBuilder */
  public static com.prakash.schema.avro.ClusterInfo.Builder newBuilder() {
    return new com.prakash.schema.avro.ClusterInfo.Builder();
  }
  
  /** Creates a new ClusterInfo RecordBuilder by copying an existing Builder */
  public static com.prakash.schema.avro.ClusterInfo.Builder newBuilder(com.prakash.schema.avro.ClusterInfo.Builder other) {
    return new com.prakash.schema.avro.ClusterInfo.Builder(other);
  }
  
  /** Creates a new ClusterInfo RecordBuilder by copying an existing ClusterInfo instance */
  public static com.prakash.schema.avro.ClusterInfo.Builder newBuilder(com.prakash.schema.avro.ClusterInfo other) {
    return new com.prakash.schema.avro.ClusterInfo.Builder(other);
  }
  
  /**
   * RecordBuilder for ClusterInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ClusterInfo>
    implements org.apache.avro.data.RecordBuilder<ClusterInfo> {

    private java.lang.CharSequence name;
    private java.lang.CharSequence kafkaUrl;
    private java.lang.CharSequence zkUrl;
    private int id;

    /** Creates a new Builder */
    private Builder() {
      super(com.prakash.schema.avro.ClusterInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.prakash.schema.avro.ClusterInfo.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing ClusterInfo instance */
    private Builder(com.prakash.schema.avro.ClusterInfo other) {
            super(com.prakash.schema.avro.ClusterInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.kafkaUrl)) {
        this.kafkaUrl = data().deepCopy(fields()[1].schema(), other.kafkaUrl);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.zkUrl)) {
        this.zkUrl = data().deepCopy(fields()[2].schema(), other.zkUrl);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.id)) {
        this.id = data().deepCopy(fields()[3].schema(), other.id);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public com.prakash.schema.avro.ClusterInfo.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'name' field */
    public com.prakash.schema.avro.ClusterInfo.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'kafkaUrl' field */
    public java.lang.CharSequence getKafkaUrl() {
      return kafkaUrl;
    }
    
    /** Sets the value of the 'kafkaUrl' field */
    public com.prakash.schema.avro.ClusterInfo.Builder setKafkaUrl(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.kafkaUrl = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'kafkaUrl' field has been set */
    public boolean hasKafkaUrl() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'kafkaUrl' field */
    public com.prakash.schema.avro.ClusterInfo.Builder clearKafkaUrl() {
      kafkaUrl = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'zkUrl' field */
    public java.lang.CharSequence getZkUrl() {
      return zkUrl;
    }
    
    /** Sets the value of the 'zkUrl' field */
    public com.prakash.schema.avro.ClusterInfo.Builder setZkUrl(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.zkUrl = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'zkUrl' field has been set */
    public boolean hasZkUrl() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'zkUrl' field */
    public com.prakash.schema.avro.ClusterInfo.Builder clearZkUrl() {
      zkUrl = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'id' field */
    public java.lang.Integer getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public com.prakash.schema.avro.ClusterInfo.Builder setId(int value) {
      validate(fields()[3], value);
      this.id = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'id' field */
    public com.prakash.schema.avro.ClusterInfo.Builder clearId() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public ClusterInfo build() {
      try {
        ClusterInfo record = new ClusterInfo();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.kafkaUrl = fieldSetFlags()[1] ? this.kafkaUrl : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.zkUrl = fieldSetFlags()[2] ? this.zkUrl : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.id = fieldSetFlags()[3] ? this.id : (java.lang.Integer) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
